<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="4" total="7" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="nopcommerce regrission suite" duration-ms="2423" started-at="2020-02-17T23:19:07 EET" finished-at="2020-02-17T23:19:09 EET">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:tests.ChangeCurrencyTest@598260a6]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:tests.RegistrationFakeDataTest@281ce6bb]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:tests.SelectAfterHoverTest@58b67519]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="regrission Test" duration-ms="2423" started-at="2020-02-17T23:19:07 EET" finished-at="2020-02-17T23:19:09 EET">
      <class name="tests.RegistrationFakeDataTest">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:tests.RegistrationFakeDataTest@281ce6bb]" name="setUpClass" is-config="true" duration-ms="4" started-at="2020-02-17T23:19:09 EET" finished-at="2020-02-17T23:19:09 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="FAIL" signature="userCanRegister()[pri:1, instance:tests.RegistrationFakeDataTest@281ce6bb]" name="userCanRegister" duration-ms="2" started-at="2020-02-17T23:19:09 EET" finished-at="2020-02-17T23:19:09 EET">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[org/openqa/selenium/WrapsElement]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: org/openqa/selenium/WrapsElement
at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.proxyForLocator(DefaultFieldDecorator.java:101)
at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.decorate(DefaultFieldDecorator.java:62)
at org.openqa.selenium.support.PageFactory.proxyFields(PageFactory.java:113)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:105)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:92)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:79)
at pages.PageBase.<init>(PageBase.java:22)
at pages.HomePage.<init>(HomePage.java:18)
at tests.RegistrationFakeDataTest.userCanRegister(RegistrationFakeDataTest.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanRegister -->
        <test-method status="PASS" signature="ScreenShotForFailure(org.testng.ITestResult)[pri:0, instance:tests.RegistrationFakeDataTest@281ce6bb]" name="ScreenShotForFailure" is-config="true" duration-ms="563" started-at="2020-02-17T23:19:09 EET" finished-at="2020-02-17T23:19:09 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanRegister status=FAILURE method=RegistrationFakeDataTest.userCanRegister()[pri:1, instance:tests.RegistrationFakeDataTest@281ce6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotForFailure -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:tests.RegistrationFakeDataTest@281ce6bb]" name="tearDownClass" is-config="true" duration-ms="1" started-at="2020-02-17T23:19:09 EET" finished-at="2020-02-17T23:19:09 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- tests.RegistrationFakeDataTest -->
      <class name="tests.ChangeCurrencyTest">
        <test-method status="PASS" signature="startDriver(java.lang.String)[pri:0, instance:tests.ChangeCurrencyTest@598260a6]" name="startDriver" is-config="true" duration-ms="12310" started-at="2020-02-17T23:18:54 EET" finished-at="2020-02-17T23:19:07 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[headless]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDriver -->
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:tests.ChangeCurrencyTest@598260a6]" name="setUpClass" is-config="true" duration-ms="77" started-at="2020-02-17T23:19:07 EET" finished-at="2020-02-17T23:19:07 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="FAIL" signature="userCanCHangeCurrency()[pri:0, instance:tests.ChangeCurrencyTest@598260a6]" name="userCanCHangeCurrency" duration-ms="36" started-at="2020-02-17T23:19:07 EET" finished-at="2020-02-17T23:19:07 EET">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[org/openqa/selenium/WrapsElement]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: org/openqa/selenium/WrapsElement
at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.proxyForLocator(DefaultFieldDecorator.java:101)
at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.decorate(DefaultFieldDecorator.java:62)
at org.openqa.selenium.support.PageFactory.proxyFields(PageFactory.java:113)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:105)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:92)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:79)
at pages.PageBase.<init>(PageBase.java:22)
at pages.HomePage.<init>(HomePage.java:18)
at tests.ChangeCurrencyTest.userCanCHangeCurrency(ChangeCurrencyTest.java:17)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.ClassNotFoundException: org.openqa.selenium.WrapsElement
at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)
at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
... 37 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanCHangeCurrency -->
        <test-method status="PASS" signature="ScreenShotForFailure(org.testng.ITestResult)[pri:0, instance:tests.ChangeCurrencyTest@598260a6]" name="ScreenShotForFailure" is-config="true" duration-ms="1023" started-at="2020-02-17T23:19:07 EET" finished-at="2020-02-17T23:19:08 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanCHangeCurrency status=FAILURE method=ChangeCurrencyTest.userCanCHangeCurrency()[pri:0, instance:tests.ChangeCurrencyTest@598260a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotForFailure -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:tests.ChangeCurrencyTest@598260a6]" name="tearDownClass" is-config="true" duration-ms="6" started-at="2020-02-17T23:19:08 EET" finished-at="2020-02-17T23:19:08 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method status="PASS" signature="stopDriver()[pri:0, instance:tests.ChangeCurrencyTest@598260a6]" name="stopDriver" is-config="true" duration-ms="3070" started-at="2020-02-17T23:19:09 EET" finished-at="2020-02-17T23:19:12 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopDriver -->
      </class> <!-- tests.ChangeCurrencyTest -->
      <class name="tests.SelectAfterHoverTest">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:tests.SelectAfterHoverTest@58b67519]" name="setUpClass" is-config="true" duration-ms="3" started-at="2020-02-17T23:19:08 EET" finished-at="2020-02-17T23:19:08 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="FAIL" signature="userCanHoverAndSelect()[pri:0, instance:tests.SelectAfterHoverTest@58b67519]" name="userCanHoverAndSelect" duration-ms="1" started-at="2020-02-17T23:19:08 EET" finished-at="2020-02-17T23:19:08 EET">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[org/openqa/selenium/WrapsElement]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: org/openqa/selenium/WrapsElement
at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.proxyForLocator(DefaultFieldDecorator.java:101)
at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.decorate(DefaultFieldDecorator.java:62)
at org.openqa.selenium.support.PageFactory.proxyFields(PageFactory.java:113)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:105)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:92)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:79)
at pages.PageBase.<init>(PageBase.java:22)
at pages.HomePage.<init>(HomePage.java:18)
at tests.SelectAfterHoverTest.userCanHoverAndSelect(SelectAfterHoverTest.java:21)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanHoverAndSelect -->
        <test-method status="PASS" signature="ScreenShotForFailure(org.testng.ITestResult)[pri:0, instance:tests.SelectAfterHoverTest@58b67519]" name="ScreenShotForFailure" is-config="true" duration-ms="599" started-at="2020-02-17T23:19:08 EET" finished-at="2020-02-17T23:19:09 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanHoverAndSelect status=FAILURE method=SelectAfterHoverTest.userCanHoverAndSelect()[pri:0, instance:tests.SelectAfterHoverTest@58b67519] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotForFailure -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:tests.SelectAfterHoverTest@58b67519]" name="tearDownClass" is-config="true" duration-ms="2" started-at="2020-02-17T23:19:09 EET" finished-at="2020-02-17T23:19:09 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- tests.SelectAfterHoverTest -->
    </test> <!-- regrission Test -->
  </suite> <!-- nopcommerce regrission suite -->
</testng-results>
