<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="6" total="12" passed="6" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-02-07T21:46:44 EET" name="nopcommerce regrission suite" finished-at="2020-02-07T21:47:06 EET" duration-ms="22696">
    <groups>
    </groups>
    <test started-at="2020-02-07T21:46:44 EET" name="regrission Test" finished-at="2020-02-07T21:47:06 EET" duration-ms="22696">
      <class name="tests.RegistrationFakeDataTest">
        <test-method signature="userCanRegister()[pri:1, instance:tests.RegistrationFakeDataTest@40712ee9]" started-at="2020-02-07T21:46:48 EET" name="userCanRegister" finished-at="2020-02-07T21:46:59 EET" duration-ms="11447" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanRegister -->
        <test-method is-config="true" signature="ScreenShotForFailure(org.testng.ITestResult)[pri:0, instance:tests.RegistrationFakeDataTest@40712ee9]" started-at="2020-02-07T21:46:59 EET" name="ScreenShotForFailure" finished-at="2020-02-07T21:46:59 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanRegister status=SUCCESS method=RegistrationFakeDataTest.userCanRegister()[pri:1, instance:tests.RegistrationFakeDataTest@40712ee9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotForFailure -->
      </class> <!-- tests.RegistrationFakeDataTest -->
      <class name="tests.AddProductToCartAndUpdateQtyTest">
        <test-method signature="userCanReachItemBySuggestedSearch()[pri:1, instance:tests.AddProductToCartAndUpdateQtyTest@2e53b094]" started-at="2020-02-07T21:46:59 EET" name="userCanReachItemBySuggestedSearch" finished-at="2020-02-07T21:47:03 EET" duration-ms="3414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanReachItemBySuggestedSearch -->
        <test-method is-config="true" signature="ScreenShotForFailure(org.testng.ITestResult)[pri:0, instance:tests.AddProductToCartAndUpdateQtyTest@2e53b094]" started-at="2020-02-07T21:47:03 EET" name="ScreenShotForFailure" finished-at="2020-02-07T21:47:03 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanReachItemBySuggestedSearch status=SUCCESS method=AddProductToCartAndUpdateQtyTest.userCanReachItemBySuggestedSearch()[pri:1, instance:tests.AddProductToCartAndUpdateQtyTest@2e53b094] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotForFailure -->
        <test-method signature="UserCanAddItemToCart()[pri:2, instance:tests.AddProductToCartAndUpdateQtyTest@2e53b094]" started-at="2020-02-07T21:47:03 EET" name="UserCanAddItemToCart" finished-at="2020-02-07T21:47:05 EET" depends-on-methods="tests.AddProductToCartAndUpdateQtyTest.userCanReachItemBySuggestedSearch" duration-ms="2508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanAddItemToCart -->
        <test-method is-config="true" signature="ScreenShotForFailure(org.testng.ITestResult)[pri:0, instance:tests.AddProductToCartAndUpdateQtyTest@2e53b094]" started-at="2020-02-07T21:47:05 EET" name="ScreenShotForFailure" finished-at="2020-02-07T21:47:05 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserCanAddItemToCart status=SUCCESS method=AddProductToCartAndUpdateQtyTest.UserCanAddItemToCart()[pri:2, instance:tests.AddProductToCartAndUpdateQtyTest@2e53b094] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotForFailure -->
        <test-method signature="UserCanUpdateQtyFromCart()[pri:0, instance:tests.AddProductToCartAndUpdateQtyTest@2e53b094]" started-at="2020-02-07T21:47:05 EET" name="UserCanUpdateQtyFromCart" finished-at="2020-02-07T21:47:06 EET" depends-on-methods="tests.AddProductToCartAndUpdateQtyTest.UserCanAddItemToCart" duration-ms="1027" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanUpdateQtyFromCart -->
        <test-method is-config="true" signature="ScreenShotForFailure(org.testng.ITestResult)[pri:0, instance:tests.AddProductToCartAndUpdateQtyTest@2e53b094]" started-at="2020-02-07T21:47:06 EET" name="ScreenShotForFailure" finished-at="2020-02-07T21:47:06 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserCanUpdateQtyFromCart status=SUCCESS method=AddProductToCartAndUpdateQtyTest.UserCanUpdateQtyFromCart()[pri:0, instance:tests.AddProductToCartAndUpdateQtyTest@2e53b094] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotForFailure -->
      </class> <!-- tests.AddProductToCartAndUpdateQtyTest -->
      <class name="tests.ChangeCurrencyTest">
        <test-method is-config="true" signature="startDriver(java.lang.String)[pri:0, instance:tests.ChangeCurrencyTest@472698d]" started-at="2020-02-07T21:46:38 EET" name="startDriver" finished-at="2020-02-07T21:46:44 EET" duration-ms="5937" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDriver -->
        <test-method signature="userCanCHangeCurrency()[pri:0, instance:tests.ChangeCurrencyTest@472698d]" started-at="2020-02-07T21:46:44 EET" name="userCanCHangeCurrency" finished-at="2020-02-07T21:46:46 EET" duration-ms="2575" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanCHangeCurrency -->
        <test-method is-config="true" signature="ScreenShotForFailure(org.testng.ITestResult)[pri:0, instance:tests.ChangeCurrencyTest@472698d]" started-at="2020-02-07T21:46:46 EET" name="ScreenShotForFailure" finished-at="2020-02-07T21:46:46 EET" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanCHangeCurrency status=SUCCESS method=ChangeCurrencyTest.userCanCHangeCurrency()[pri:0, instance:tests.ChangeCurrencyTest@472698d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotForFailure -->
        <test-method is-config="true" signature="stopDriver()[pri:0, instance:tests.ChangeCurrencyTest@472698d]" started-at="2020-02-07T21:47:07 EET" name="stopDriver" finished-at="2020-02-07T21:47:10 EET" duration-ms="3186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopDriver -->
      </class> <!-- tests.ChangeCurrencyTest -->
      <class name="tests.SelectAfterHoverTest">
        <test-method signature="userCanHoverAndSelect()[pri:0, instance:tests.SelectAfterHoverTest@7b7683d4]" started-at="2020-02-07T21:46:46 EET" name="userCanHoverAndSelect" finished-at="2020-02-07T21:46:48 EET" duration-ms="1662" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanHoverAndSelect -->
        <test-method is-config="true" signature="ScreenShotForFailure(org.testng.ITestResult)[pri:0, instance:tests.SelectAfterHoverTest@7b7683d4]" started-at="2020-02-07T21:46:48 EET" name="ScreenShotForFailure" finished-at="2020-02-07T21:46:48 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanHoverAndSelect status=SUCCESS method=SelectAfterHoverTest.userCanHoverAndSelect()[pri:0, instance:tests.SelectAfterHoverTest@7b7683d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotForFailure -->
      </class> <!-- tests.SelectAfterHoverTest -->
    </test> <!-- regrission Test -->
  </suite> <!-- nopcommerce regrission suite -->
</testng-results>
